diff --git a/CMakeLists.txt b/CMakeLists.txt
index 46524dba..5b7265c4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -261,7 +261,7 @@ add_subdirectory(tdutils)
 
 add_subdirectory(td/generate)
 
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   add_custom_target(prepare_cross_compiling DEPENDS tl_generate_common tdmime_auto tl_generate_json)
   if (TD_ENABLE_DOTNET)
     add_custom_target(remove_cpp_documentation
@@ -785,7 +785,7 @@ target_include_directories(tdcore PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURC
 target_include_directories(tdcore SYSTEM PRIVATE ${OPENSSL_INCLUDE_DIR})
 target_link_libraries(tdcore PUBLIC tdapi tdactor tdutils tdnet tddb PRIVATE ${OPENSSL_CRYPTO_LIBRARY} ${CMAKE_DL_LIBS} ${ZLIB_LIBRARIES})
 
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   add_dependencies(tdcore tl_generate_common)
   if (TD_ENABLE_JNI)
     add_dependencies(tdcore td_generate_java_api)
@@ -813,7 +813,7 @@ if (TD_ENABLE_DOTNET)
   target_include_directories(tddotnet PUBLIC
     $<BUILD_INTERFACE:${TL_TD_AUTO_INCLUDE_DIR}>
   )
-  if (NOT CMAKE_CROSSCOMPILING)
+  if (YES)
     add_dependencies(tddotnet generate_dotnet_api)
   endif()
 
@@ -833,7 +833,7 @@ target_include_directories(tdc PUBLIC
   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
   $<BUILD_INTERFACE:${TL_TD_AUTO_INCLUDE_DIR}>)
 target_link_libraries(tdc PRIVATE tdclient tdutils)
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   add_dependencies(tdc tl_generate_c)
 endif()
 
@@ -842,7 +842,7 @@ target_include_directories(tdjson_private PUBLIC
   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
   $<BUILD_INTERFACE:${TL_TD_AUTO_INCLUDE_DIR}>)
 target_link_libraries(tdjson_private PUBLIC tdclient tdutils)
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   add_dependencies(tdjson_private tl_generate_common tl_generate_json)
   if (TD_ENABLE_DOTNET)
     add_dependencies(tdjson_private remove_cpp_documentation)
@@ -899,7 +899,7 @@ if (EMSCRIPTEN)
 endif()
 
 #EXECUTABLES
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   add_executable(tg_cli td/telegram/cli.cpp ${TL_TD_JSON_SOURCE})
 
   if (NOT READLINE_FOUND)
diff --git a/td/generate/CMakeLists.txt b/td/generate/CMakeLists.txt
index adbaa266..49947baa 100644
--- a/td/generate/CMakeLists.txt
+++ b/td/generate/CMakeLists.txt
@@ -93,7 +93,7 @@ set(TL_GENERATE_JSON_SOURCE
   tl_json_converter.h
 )
 
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   find_program(PHP_EXECUTABLE php)
 
   if ((CMAKE_SYSTEM_NAME MATCHES "FreeBSD") AND (CMAKE_SYSTEM_VERSION MATCHES "HBSD"))
diff --git a/tddb/CMakeLists.txt b/tddb/CMakeLists.txt
index 9a80b6cf..8cc9b0f5 100644
--- a/tddb/CMakeLists.txt
+++ b/tddb/CMakeLists.txt
@@ -48,7 +48,7 @@ add_library(tddb STATIC ${TDDB_SOURCE})
 target_include_directories(tddb PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
 target_link_libraries(tddb PUBLIC tdactor tdutils PRIVATE tdsqlite)
 
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   add_executable(binlog_dump td/db/binlog/binlog_dump.cpp)
   target_link_libraries(binlog_dump PRIVATE tddb)
 endif()
diff --git a/tdutils/CMakeLists.txt b/tdutils/CMakeLists.txt
index d57d93c8..8150188c 100644
--- a/tdutils/CMakeLists.txt
+++ b/tdutils/CMakeLists.txt
@@ -291,7 +291,7 @@ if (WIN32)
   # target_link_libraries(tdutils PRIVATE ${WS2_32_LIBRARY} ${MSWSOCK_LIBRARY})
   target_link_libraries(tdutils PRIVATE ws2_32 Mswsock Normaliz)
 endif()
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   add_dependencies(tdutils tdmime_auto)
 endif()
 
diff --git a/tdutils/generate/CMakeLists.txt b/tdutils/generate/CMakeLists.txt
index 9eca574a..72e51c9a 100644
--- a/tdutils/generate/CMakeLists.txt
+++ b/tdutils/generate/CMakeLists.txt
@@ -16,7 +16,7 @@ set(TDMIME_AUTO
 
 add_custom_target(tdmime_auto DEPENDS ${TDMIME_SOURCE})
 
-if (NOT CMAKE_CROSSCOMPILING)
+if (YES)
   find_program(GPERF_EXECUTABLE gperf)
   if (NOT GPERF_EXECUTABLE)
     message(FATAL_ERROR "Could NOT find gperf. Add path to gperf executable to PATH environment variable or specify it manually using GPERF_EXECUTABLE option, i. e. 'cmake -DGPERF_EXECUTABLE:FILEPATH=\"<path to gperf executable>\"'.")
